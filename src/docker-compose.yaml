version: "3.9"
services:
  userdata_postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: userdata_db
      POSTGRES_USER: main_service
      POSTGRES_PASSWORD: 'password'
    ports:
      - 5432:5432
    networks:
      - local

  redis:
    container_name: redis_user_data_db
    image: redis:latest
    networks:
      - local

  posts_postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: posts_db
      POSTGRES_USER: post_service
      POSTGRES_PASSWORD: 'password'
    ports:
      - 5432:5432
    networks:
      - local

  post_service:
    build: 
      context: .
      dockerfile: ./post_service/Dockerfile
    restart: on-failure:10
    depends_on:
      - postgres
    ports:
      - 50051:50051
    networks:
      - local

  clickhouse:
    image: 'bitnami/clickhouse:latest'
    restart: on-failure:10
    ports:
      - 8123:8123
      - 9000:9000
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - local

  kafka:
    image: 'bitnami/kafka:3.6'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - local

  stat_service:
    build: 
      context: .
      dockerfile: ./stat_service/Dockerfile
    restart: on-failure:10
    depends_on:
      - kafka
      # - clickhouse
    ports:
      - 8192:8192
    networks:
      - local

  main_service:
    build: 
      context: .
      dockerfile: ./main_service/Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - post_service
      - kafka
      # condition:
      #   - service_healthy
      - stat_service
    ports:
      - 4200:4200
    networks:
      - local

networks:
  local:
    driver: bridge